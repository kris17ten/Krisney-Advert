// #include loads up library files, the order can matter
// generally load glut.h last
#include <stdio.h>  // this library is for standard input and output
#include <stdlib.h>
#include <math.h> //for rotation and math-y stuff
#include "krisneyAd.h"
#include "glut.h"// this library is for glut the OpenGL Utility Toolkit

/*File containing drawing of the alphabets. Array of alphabets and drawing functions*/

float A[][4][2] = { { {0.0, 100.0}, {10.0, 100.0}, {50.0, 0.0}, {40.0, 0.0} },
	{ {0.0, 100.0}, {10.0, 100.0}, {-30.0, 0.0}, {-40.0, 0.0} },
	{ {25.0, 55.0}, {25.0, 45.0}, {-15.0, 45.0}, {-15.0, 55.0} }
};

void drawA() {
	for (int o = 0; o < 3; o++) {
		glBegin(GL_POLYGON);
		for (int i = 0; i < 4; i++)
			glVertex2fv(A[o][i]);
		glEnd();
	}
}

float B[][4][2] = { { {0.0, 100.0}, {10.0, 100.0}, {10.0, 0.0}, {0.0, 0.0} },
	{ {0.0, 100.0}, {0.0, 90.0}, {50.0, 90.0}, {50.0, 100.0} },
	{ {50.0, 90.0}, {60.0, 90.0}, {60.0, 55.0}, {50.0, 55.0} },
	{ {0.0, 55.0}, {0.0, 45.0}, {50.0, 45.0}, {50.0, 55.0} },
	{ {50.0, 45.0}, {60.0, 45.0}, {60.0, 10.0}, {50.0, 10.0} },
	{ {0.0, 10.0}, {0.0, 0.0}, {50.0, 0.0}, {50.0, 10.0} } };

void drawB() {
	for (int o = 0; o < 6; o++) {
		glBegin(GL_POLYGON);
		for (int i = 0; i < 4; i++)
			glVertex2fv(B[o][i]);
		glEnd();
	}
}

float C[][4][2] = { { {0.0, 100.0}, {0.0, 90.0}, {50.0, 90.0}, {50.0, 100.0} },
	{ {-10.0, 90.0}, {0.0, 90.0}, {0.0, 10.0}, {-10.0, 10.0} },
	{ {0.0, 10.0}, {0.0, 0.0}, {50.0, 0.0}, {50.0, 10.0} } };

void drawC() {
	for (int o = 0; o < 3; o++) {
		glBegin(GL_POLYGON);
		for (int i = 0; i < 4; i++)
			glVertex2fv(C[o][i]);
		glEnd();
	}
}

float D[][4][2] = { { {0.0, 100.0}, {10.0, 100.0}, {10.0, 0.0}, {0.0, 0.0} },
	{ {50.0, 100.0}, {50.0, 90.0}, {0.0, 90.0}, {0.0, 100.0} },
	{ {50.0, 10.0}, {50.0, 90.0}, {60.0, 90.0}, {60.0, 10.0} },
	{ {50.0, 10.0}, {50.0, 0.0}, {0.0, 0.0}, {0.0, 10.0} } };

void drawD() {
	for (int o = 0; o < 4; o++) {
		glBegin(GL_POLYGON);
		for (int i = 0; i < 4; i++)
			glVertex2fv(D[o][i]);
		glEnd();
	}
}

float E[][4][2] = { { {0.0, 100.0}, {10.0, 100.0}, {10.0, 0.0}, {0.0, 0.0} },
	{ {50.0, 10.0}, {50.0, 0.0}, {0.0, 0.0}, {0.0, 10.0} },
	{ {50.0, 100.0}, {50.0, 90.0}, {0.0, 90.0}, {0.0, 100.0} },
	{ {30.0, 55.0}, {30.0, 45.0}, {0.0, 45.0}, {0.0, 55.0} } };

void drawE() {
	for (int o = 0; o < 4; o++) {
		glBegin(GL_POLYGON);
		for (int i = 0; i < 4; i++)
			glVertex2fv(E[o][i]);
		glEnd();
	}
}

float F[][4][2] = { { {0.0, 100.0}, {10.0, 100.0}, {10.0, 0.0}, {0.0, 0.0} },
	{ {50.0, 100.0}, {50.0, 90.0}, {0.0, 90.0}, {0.0, 100.0} },
	{ {30.0, 55.0}, {30.0, 45.0}, {0.0, 45.0}, {0.0, 55.0} } };

void drawF() {
	for (int o = 0; o < 3; o++) {
		glBegin(GL_POLYGON);
		for (int i = 0; i < 4; i++)
			glVertex2fv(F[o][i]);
		glEnd();
	}
}

float G[][4][2] = { { {0.0, 90.0}, {-10.0, 90.0}, {-10.0, 10.0}, {0.0, 10.0} },
	{ {50.0, 10.0}, {50.0, 0.0}, {0.0, 0.0}, {0.0, 10.0} },
	{ {50.0, 100.0}, {50.0, 90.0}, {0.0, 90.0}, {0.0, 100.0} },
	{ {50.0, 45.0}, {60.0, 45.0}, {60.0, 10.0}, {50.0, 10.0} },
	{ {70.0, 55.0}, {70.0, 45.0}, {40.0, 45.0}, {40.0, 55.0} } };

void drawG() {
	for (int o = 0; o < 5; o++) {
		glBegin(GL_POLYGON);
		for (int i = 0; i < 4; i++)
			glVertex2fv(G[o][i]);
		glEnd();
	}
}

float H[][4][2] = { { {0.0, 100.0}, {10.0, 100.0}, {10.0, 0.0}, {0.0, 0.0} },
	{ {60.0, 55.0}, {60.0, 45.0}, {0.0, 45.0}, {0.0, 55.0} },
	{ {50.0, 100.0}, {60.0, 100.0}, {60.0, 0.0}, {50.0, 0.0} } };

void drawH() {
	for (int o = 0; o < 3; o++) {
		glBegin(GL_POLYGON);
		for (int i = 0; i < 4; i++)
			glVertex2fv(H[o][i]);
		glEnd();
	}
}

float I[][4][2] = { { {0.0, 100.0}, {10.0, 100.0}, {10.0, 0.0}, {0.0, 0.0} },
	{ {-10.0, 10.0}, {-10.0, 0.0}, {20.0, 0.0}, {20.0, 10.0} },
	{ {-10.0, 100.0}, {-10.0, 90.0}, {20.0, 90.0}, {20.0, 100.0} } };

void drawI() {
	for (int o = 0; o < 3; o++) {
		glBegin(GL_POLYGON);
		for (int i = 0; i < 4; i++)
			glVertex2fv(I[o][i]);
		glEnd();
	}
}

float J[][4][2] = { { {0.0, 100.0}, {10.0, 100.0}, {10.0, 10.0}, {0.0, 10.0} },
	{ {-20.0, 100.0}, {-20.0, 90.0}, {30.0, 90.0}, {30.0, 100.0} },
	{ {-30.0, 10.0}, {-30.0, 0.0}, {0.0, 0.0}, {0.0, 10.0} } };

void drawJ() {
	for (int o = 0; o < 3; o++) {
		glBegin(GL_POLYGON);
		for (int i = 0; i < 4; i++)
			glVertex2fv(J[o][i]);
		glEnd();
	}
}

float K[][4][2] = { { {0.0, 100.0}, {10.0, 100.0}, {10.0, 0.0}, {0.0, 0.0} },
{ {50.0, 100.0}, {60.0, 100.0}, {10.0, 50.0}, {0.0, 50.0} },
	{ {0.0, 50.0}, {10.0, 50.0}, {60.0, 0.0}, {50.0, 0.0} } };

void drawK() {
	for (int o = 0; o < 3; o++) {
		glBegin(GL_POLYGON);
		for (int i = 0; i < 4; i++)
			glVertex2fv(K[o][i]);
		glEnd();
	}
}

float L[][4][2] = { { {0.0, 100.0}, {10.0, 100.0}, {10.0, 0.0}, {0.0, 0.0} },
	{ {50.0, 10.0}, {50.0, 0.0}, {0.0, 0.0}, {0.0, 10.0} } };

void drawL() {
	for (int o = 0; o < 2; o++) {
		glBegin(GL_POLYGON);
		for (int i = 0; i < 4; i++)
			glVertex2fv(L[o][i]);
		glEnd();
	}
}

float M[][4][2] = { { {0.0, 100.0}, {10.0, 100.0}, {10.0, 0.0}, {0.0, 0.0} },
	{ {0.0, 100.0}, {10.0, 100.0}, {40.0, 40.0}, {30.0, 40.0} },
	{ {70.0, 100.0}, {60.0, 100.0}, {30.0, 40.0}, {40.0, 40.0} },
	{ {60.0, 0.0}, {70.0, 0.0}, {70.0, 100.0}, {60.0, 100.0} } };

void drawM() {
	for (int o = 0; o < 4; o++) {
		glBegin(GL_POLYGON);
		for (int i = 0; i < 4; i++)
			glVertex2fv(M[o][i]);
		glEnd();
	}
}

float N[][4][2] = { { {0.0, 100.0}, {10.0, 100.0}, {10.0, 0.0}, {0.0, 0.0} },
	{ {0.0, 100.0}, {10.0, 100.0}, {60.0, 0.0}, {50.0, 0.0} },
	{ {50.0, 0.0}, {60.0, 0.0}, {60.0, 100.0}, {50.0, 100.0} } };

void drawN() {
	for (int o = 0; o < 3; o++) {
		glBegin(GL_POLYGON);
		for (int i = 0; i < 4; i++)
			glVertex2fv(N[o][i]);
		glEnd();
	}
}

float O[][4][2] = { { {0.0, 90.0}, {10.0, 90.0}, {10.0, 10.0}, {0.0, 10.0} },
	{ {50.0, 100.0}, {50.0, 90.0}, {10.0, 90.0}, {10.0, 100.0} },
	{ {50.0, 10.0}, {50.0, 90.0}, {60.0, 90.0}, {60.0, 10.0} },
	{ {50.0, 10.0}, {50.0, 0.0}, {10.0, 0.0}, {10.0, 10.0} } };

void drawO() {
	for (int o = 0; o < 4; o++) {
		glBegin(GL_POLYGON);
		for (int i = 0; i < 4; i++)
			glVertex2fv(O[o][i]);
		glEnd();
	}
}

float P[][4][2] = { { {0.0, 100.0}, {10.0, 100.0}, {10.0, 0.0}, {0.0, 0.0} },
	{ {0.0, 100.0}, {0.0, 90.0}, {50.0, 90.0}, {50.0, 100.0} },
	{ {50.0, 90.0}, {60.0, 90.0}, {60.0, 55.0}, {50.0, 55.0} },
	{ {0.0, 55.0}, {0.0, 45.0}, {50.0, 45.0}, {50.0, 55.0} } };

void drawP() {
	for (int o = 0; o < 4; o++) {
		glBegin(GL_POLYGON);
		for (int i = 0; i < 4; i++)
			glVertex2fv(P[o][i]);
		glEnd();
	}
}

float Q[][4][2] = { { {0.0, 90.0}, {10.0, 90.0}, {10.0, 10.0}, {0.0, 10.0} },
	{ {50.0, 100.0}, {50.0, 90.0}, {10.0, 90.0}, {10.0, 100.0} },
	{ {50.0, 10.0}, {50.0, 90.0}, {60.0, 90.0}, {60.0, 10.0} },
	{ {50.0, 10.0}, {50.0, 0.0}, {10.0, 0.0}, {10.0, 10.0} },
	{ {30.0, 30.0}, {40.0, 30.0}, {70.0, 0.0}, {60.0, 0.0} } };

void drawQ() {
	for (int o = 0; o < 5; o++) {
		glBegin(GL_POLYGON);
		for (int i = 0; i < 4; i++)
			glVertex2fv(Q[o][i]);
		glEnd();
	}
}

float R[][4][2] = { { {0.0, 100.0}, {10.0, 100.0}, {10.0, 0.0}, {0.0, 0.0} },
	{ {50.0, 100.0}, {50.0, 90.0}, {0.0, 90.0}, {0.0, 100.0} },
	{ {50.0, 90.0}, {60.0, 90.0}, {60.0, 50.0}, {50.0, 50.0} },
	{ {0.0, 50.0}, {0.0, 40.0}, {50.0, 40.0}, {50.0, 50.0} },
	{ {0.0, 50.0}, {10.0, 50.0}, {60.0, 0.0}, {50.0, 0.0} } };

void drawR() {
	for (int o = 0; o < 5; o++) {
		glBegin(GL_POLYGON);
		for (int i = 0; i < 4; i++)
			glVertex2fv(R[o][i]);
		glEnd();
	}
}

float S[][4][2] = { { {0.0, 100.0}, {0.0, 90.0}, {50.0, 90.0}, {50.0, 100.0} },
	{ {-10.0, 90.0}, {0.0, 90.0}, {0.0, 60.0}, {-10.0, 60.0} },
	{ {50.0, 60.0}, {50.0, 50.0}, {0.0, 50.0}, {0.0, 60.0} },
	{ {50.0, 50.0}, {60.0, 50.0}, {60.0, 10.0}, {50.0, 10.0} },
	{ {0.0, 10.0}, {0.0, 0.0}, {50.0, 0.0}, {50.0, 10.0} } };

void drawS() {
	for (int o = 0; o < 5; o++) {
		glBegin(GL_POLYGON);
		for (int i = 0; i < 4; i++)
			glVertex2fv(S[o][i]);
		glEnd();
	}
}

float T[][4][2] = { { {0.0, 100.0}, {10.0, 100.0}, {10.0, 0.0}, {0.0, 0.0} },
	{ {-20.0, 100.0}, {-20.0, 90.0}, {30.0, 90.0}, {30.0, 100.0} } };

void drawT() {
	for (int o = 0; o < 2; o++) {
		glBegin(GL_POLYGON);
		for (int i = 0; i < 4; i++)
			glVertex2fv(T[o][i]);
		glEnd();
	}
}

float U[][4][2] = { { {0.0, 90.0}, {10.0, 90.0}, {10.0, 10.0}, {0.0, 10.0} },
	{ {50.0, 10.0}, {50.0, 90.0}, {60.0, 90.0}, {60.0, 10.0} },
	{ {50.0, 10.0}, {50.0, 0.0}, {10.0, 0.0}, {10.0, 10.0} } };

void drawU() {
	for (int o = 0; o < 3; o++) {
		glBegin(GL_POLYGON);
		for (int i = 0; i < 4; i++)
			glVertex2fv(U[o][i]);
		glEnd();
	}
}

float V[][4][2] = { { {0.0, 0.0}, {10.0, 0.0}, {40.0, 100.0}, {30.0, 100.0} },
	{ {0.0, 0.0}, {10.0, 0.0}, {-20.0, 100.0}, {-30.0, 100.0} } };

void drawV() {
	for (int o = 0; o < 2; o++) {
		glBegin(GL_POLYGON);
		for (int i = 0; i < 4; i++)
			glVertex2fv(V[o][i]);
		glEnd();
	}
}

float W[][4][2] = { { {0.0, 100.0}, {10.0, 100.0}, {20.0, 0.0}, {10.0, 0.0} },
	{ {10.0, 0.0}, {20.0, 0.0}, {45.0, 50.0}, {35.0, 50.0} },
	{ {70.0, 0.0}, {60.0, 0.0}, {35.0, 50.0}, {45.0, 50.0} },
	{ {60.0, 0.0}, {70.0, 0.0}, {80.0, 100.0}, {70.0, 100.0} } };

void drawW() {
	for (int o = 0; o < 4; o++) {
		glBegin(GL_POLYGON);
		for (int i = 0; i < 4; i++)
			glVertex2fv(W[o][i]);
		glEnd();
	}
}

float X[][4][2] = { { {-30.0, 100.0}, {-20.0, 100.0}, {40.0, 0.0}, {30.0, 0.0} },
	{ {30.0, 100.0}, {40.0, 100.0}, {-20.0, 0.0}, {-30.0, 0.0} } };

void drawX() {
	for (int o = 0; o < 2; o++) {
		glBegin(GL_POLYGON);
		for (int i = 0; i < 4; i++)
			glVertex2fv(X[o][i]);
		glEnd();
	}
}

float Y[][4][2] = { { {-30.0, 100.0}, {-20.0, 100.0}, {10.0, 50.0}, {0.0, 50.0} },
	{ {30.0, 100.0}, {40.0, 100.0}, {10.0, 50.0}, {0.0, 50.0} },
	{ {0.0, 50.0}, {10.0, 50.0}, {10.0, 0.0}, {0.0, 0.0} } };

void drawY() {
	for (int o = 0; o < 3; o++) {
		glBegin(GL_POLYGON);
		for (int i = 0; i < 4; i++)
			glVertex2fv(Y[o][i]);
		glEnd();
	}
}

float Z[][4][2] = { { {50.0, 10.0}, {50.0, 0.0}, {0.0, 0.0}, {0.0, 10.0} },
	{ {50.0, 100.0}, {50.0, 90.0}, {0.0, 90.0}, {0.0, 100.0} },
	{ {50.0, 90.0}, {40.0, 90.0}, {0.0, 10.0}, {10.0, 10.0} } };

void drawZ() {
	for (int o = 0; o < 3; o++) {
		glBegin(GL_POLYGON);
		for (int i = 0; i < 4; i++)
			glVertex2fv(Z[o][i]);
		glEnd();
	}
}

   //////////////////////////
  //  ALPHABET ANIMATION  //
 //////////////////////////


void drawAlphabet(char letter, float tx, float ty) {
	glPushMatrix();
	glTranslatef(tx, ty, 0.0);
	if (letter == 'A') {
		drawA();
	}
	else if (letter == 'B') {
		drawB();
	}
	else if (letter == 'C') {
		drawC();
	}
	else if (letter == 'D') {
		drawD();
	}
	else if (letter == 'E') {
		drawE();
	}
	else if (letter == 'F') {
		drawF();
	}
	else if (letter == 'G') {
		drawG();
	}
	else if (letter == 'H') {
		drawH();
	}
	else if (letter == 'I') {
		drawI();
	}
	else if (letter == 'J') {
		drawJ();
	}
	else if (letter == 'K') {
		drawK();
	}
	else if (letter == 'L') {
		drawL();
	}
	else if (letter == 'M') {
		drawM();
	}
	else if (letter == 'N') {
		drawN();
	}
	else if (letter == 'O') {
		drawO();
	}
	else if (letter == 'P') {
		drawP();
	}
	else if (letter == 'Q') {
		drawQ();
	}
	else if (letter == 'R') {
		drawR();
	}
	else if (letter == 'S') {
		drawS();
	}
	else if (letter == 'T') {
		drawT();
	}
	else if (letter == 'U') {
		drawU();
	}
	else if (letter == 'V') {
		drawV();
	}
	else if (letter == 'W') {
		drawW();
	}
	else if (letter == 'X') {
		drawX();
	}
	else if (letter == 'Y') {
		drawY();
	}
	else if (letter == 'Z') {
		drawZ();
	}
	glPopMatrix();
}